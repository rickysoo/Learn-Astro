---
export interface Props {
  title: string;
  description: string;
  icon: string;
  benefits: string[];
  codeExample?: string;
  language?: string;
}

const { title, description, icon, benefits, codeExample, language = 'astro' } = Astro.props;
---

<div class="bg-white/70 dark:bg-slate-800/70 backdrop-blur-sm rounded-xl p-8 shadow-lg hover:shadow-xl transition-all duration-300 border border-slate-200/50 dark:border-slate-700/50 group hover:scale-105">
  <div class="flex items-center mb-4">
    <span class="text-4xl mr-3">{icon}</span>
    <h3 class="text-2xl font-bold text-slate-800 dark:text-slate-100 group-hover:text-orange-600 transition-colors">{title}</h3>
  </div>
  
  <p class="text-slate-600 dark:text-slate-300 mb-6 leading-relaxed">{description}</p>
  
  {codeExample && (
    <div class="mb-6">
      <h4 class="text-sm font-semibold text-slate-700 dark:text-slate-300 mb-2 uppercase tracking-wide">Example:</h4>
      <div class="bg-slate-900 dark:bg-slate-950 rounded-lg p-4 overflow-x-auto border dark:border-slate-800">
        <pre class="text-sm text-slate-100"><code set:html={codeExample}></code></pre>
      </div>
    </div>
  )}
  
  <div>
    <h4 class="text-sm font-semibold text-slate-700 dark:text-slate-300 mb-3 uppercase tracking-wide">Key Benefits:</h4>
    <ul class="space-y-2">
      {benefits.map((benefit) => (
        <li class="flex items-start">
          <span class="text-green-500 mr-2 mt-0.5">âœ“</span>
          <span class="text-slate-600 dark:text-slate-400 text-sm">{benefit}</span>
        </li>
      ))}
    </ul>
  </div>
</div>